name: Test, Build & Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  id-token: write
  contents: write

jobs:
  test_build_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Set up Node.js (for build/test and npm publish)"
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: "Update npm to latest (Trusted Publishers requires npm >= 11.5.1)"
        run: npm install -g npm@latest

      - name: "Extend environment variables"
        run: |
          echo "BRANCH_NAME=$(git branch --show-current)" >> $GITHUB_ENV

      - name: "Build & Test"
        run: yarn && yarn dist && yarn test

      # No npm token needed for publish; OIDC is handled automatically by npm Trusted Publishers
      - name: "Configure Git identity"
        if: env.BRANCH_NAME == 'master'
        run: |
          git config --global user.email webapp+travis@wire.com
          git config --global user.name "Wire Travis CI"

      - name: "Release new version"
        if: env.BRANCH_NAME == 'master'
        run: yarn version --minor

  run-ios-spm-tests:
    name: Test Swift package on macOS
    runs-on: macos-26

    steps:
      - name: Install swift-protobuf
        run: brew install swift-protobuf

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Ensure generated code is up-to-date
        run: |
          set -Eeuo pipefail
          cd ios
          ./update.sh

          if [[ -n $(git status --porcelain) ]]; then
            echo "::error:: Working tree has uncommitted changes or untracked files:"
            echo "Run ./update.sh in the ios directory and commit the changes!"
            echo    # blank line for readability
            git status --porcelain
            exit 1             # any non-zero exit code fails the step â†’ job
          fi

      - name: Run tests via swift test
        run: swift test

      - name: Run tests via xcodebuild
        run: |
          xcodebuild \
            -workspace . \
            -scheme GenericMessageProtocol \
            -destination "platform=macOS,arch=arm64" \
            -quiet \
            clean test
