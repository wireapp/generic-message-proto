name: Test, Build & Release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test_build_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Extend environment variables'
        run: |
          echo "BRANCH_NAME=$(git branch --show-current)" >> $GITHUB_ENV

      - name: 'Build & Test'
        run: yarn && yarn dist && yarn test

      - name: 'Authenticate with GitHub (to commit new tag)'
        if: env.BRANCH_NAME == 'master'
        env:
          GH_TOKEN: ${{secrets.OTTO_THE_BOT_GH_TOKEN}}
        run: echo -e "machine github.com\n  login ${GH_TOKEN}" > ~/.netrc

      - name: 'Authenticate with npm registry (to publish new version)'
        if: env.BRANCH_NAME == 'master'
        env:
          NPM_TOKEN: ${{ secrets.WEBTEAM_NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> "${HOME}/.npmrc"
          git config --global user.email webapp+travis@wire.com
          git config --global user.name "Wire Travis CI"

      - name: 'Release new version'
        if: env.BRANCH_NAME == 'master'
        run: yarn version --minor

  run-ios-spm-tests:
    name: Test Swift package on macOS
    runs-on: macos-26

    steps:
      - name: Install swift-protobuf
        run: brew install swift-protobuf

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Ensure generated code is up-to-date
        run: |
          set -Eeuo pipefail
          cd ios
          ./update.sh

          if [[ -n $(git status --porcelain) ]]; then
            echo "::error:: Working tree has uncommitted changes or untracked files:"
            echo "Run ./update.sh in the ios directory and commit the changes!"
            echo    # blank line for readability
            git status --porcelain
            exit 1             # any non-zero exit code fails the step â†’ job
          fi

      - name: Run tests via swift test
        run: swift test

      - name: Run tests via xcodebuild
        run: |
          xcodebuild \
            -workspace . \
            -scheme GenericMessageProtocol \
            -destination "platform=macOS,arch=arm64" \
            -quiet \
            clean test
